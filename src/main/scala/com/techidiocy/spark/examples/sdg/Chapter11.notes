 Chapter-11 - SQL

 Spark implements a subset of ANSI SQL:2003. An OLAP not OLTP.
Spark SQL can connect to hive metastore.


 Catalog - highest level of abstraction in spark sql. It is an abstraction for the storage of metadata about the data
 data stored in the tables.

 Tables - They always contains data. 
 It can be a managed or an unmanaged table.
 Unmanaged Tables - table directly created from a file on the file system.
 Managed Table - table created using method like saveAsDataFrame.


 Hive SerDes are much more slower than Spark native serialization.


CREATE TABLE flights (DEST_COUNTRY_NAME STRING,ORIGIN_COUNTRY_NAME STRING, count LONG) 
USING JSON 
OPTIONS(path "/Users/saurabhjain/soft/spark-2.3.2-bin-hadoop2.7/customdata/Spark-The-Definitive-Guide/data/flight-data/json/2015-summary.json");


 Temporary tables do not exist , but you can create a Temporary view.

 External Tables.

DESCRIBE TABLE <TABLE_NAME>

 SHOW PARTITIONS <TABLE_NAME>

 Tables can also be cached like data frames.

CACHE TABLE <TABLE_NAME>
UNCACHE TABLE <TABLE_NAME>

 Views - Set of transformations on top of an existing table.
 Global views , set to a database and per session.

 case ... when ... then statements.

 Complex Types are departure from the standard sql and are an incredibly powerful feature that doesn't 
 exist in standard SQL. - structs , lists and map.

 // Creating a temp view for collect list example and then will later use explode to scatter them 
 // into rows.


CREATE OR REPLACE TEMP VIEW FLIGHTS_AGG as 
SELECT DEST_COUNTRY_NAME, COLLECT_LIST(COUNT) AS COLLECTED_COUNTS FROM FLIGHTS GROUP BY DEST_COUNTRY_NAME;


Functions - create a function in language of your choice and then register it.

def power3(number:Double):Double = number * number * number
spark.udf.register("power3", power3(_:Double):Double)

select count , power3(count) from flights;



